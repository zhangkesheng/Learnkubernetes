version: '2'
services:
  etcd:
    image: bestmike007/etcd:v3.2.11
    restart: always
    command: "/usr/local/bin/etcd \
            --name={{ NODE_NAME }} \
            --cert-file=/etc/etcd/ssl/etcd.pem \
            --key-file=/etc/etcd/ssl/etcd-key.pem \
            --peer-cert-file=/etc/etcd/ssl/etcd.pem \
            --peer-key-file=/etc/etcd/ssl/etcd-key.pem \
            --trusted-ca-file=/etc/kubernetes/ssl/ca.pem \
            --peer-trusted-ca-file=/etc/kubernetes/ssl/ca.pem \
            --initial-advertise-peer-urls=https://{{ NODE_IP }}:2380 \
            --listen-peer-urls=https://{{ NODE_IP }}:2380 \
            --listen-client-urls=https://{{ NODE_IP }}:2379,http://127.0.0.1:2379 \
            --advertise-client-urls=https://{{ NODE_IP }}:2379 \
            --initial-cluster-token=etcd-cluster-0 \
            --initial-cluster={{ ETCD_NODES }} \
            --initial-cluster-state=new \
            --data-dir=/var/lib/etcd"
    volumes:
      - /var/lib/etcd:/etcd-data
    ports:
      - '2379:2379'
      - '2380:2380'
  kube-api:
      image: bestmike007/etcd:v3.2.11
      restart: always
      network_mode: host
      command: "/usr/local/bin/kube-apiserver \
                --insecure-bind-address=127.0.0.1 \
                --bind-address=0.0.0.0 \
                --insecure-port=8080 \
                --secure-port=6443 \
                --cloud-provider= \
                --allow_privileged=true \
                --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname \
                --service-cluster-ip-range= {{ SERVICE_CIDR }} \
                --admission-control=ServiceAccount,NamespaceLifecycle,LimitRanger,PersistentVolumeLabel,DefaultStorageClass,ResourceQuota,DefaultTolerationSeconds \
                --runtime-config=batch/v2alpha1 \
                --runtime-config=authentication.k8s.io/v1beta1=true \
                --storage-backend=etcd3 \
                --etcd-servers={{ ETCD_ENDPOINTS }} \
                --client-ca-file={{ ca_dir }}/ca.pem \
                --tls-cert-file={{ ca_dir }}/kubernetes.pem \
                --tls-private-key-file={{ ca_dir }}/kubernetes-key.pem \
                --service-account-key-file={{ ca_dir }}/ca-key.pem \
                --authorization-mode=RBAC \
                --runtime-config=extensions/v1beta1/podsecuritypolicy=true \
                --admission-control=PodSecurityPolicy \
                --v=4"
      volumes:
        - /etc/kubernetes:/etc/kubernetes
      ports:
        - '8080:8080'
  kube-controller:
      image: bestmike007/etcd:v3.2.11
      restart: always
      network_mode: host
      command: "/usr/local/bin/kube-controller-manager \
                --address=0.0.0.0 \
                --cloud-provider= \
                --leader-elect=true \
                --kubeconfig=/etc/kubernetes/ssl/kubecfg-controller-manager.config \
                --enable-hostpath-provisioner=false \
                --node-monitor-grace-period=40s \
                --pod-eviction-timeout=5m0s \
                --v=2 \
                --allocate-node-cidrs=true \
                --cluster-cidr={{ CLUSTER_CIDR }} \
                --service-cluster-ip-range={{ SERVICE_CIDR }} \
                --service-account-private-key-file={{ ca_dir }}/ca-key.pem \
                --root-ca-file={{ ca_dir }}/ca.pem \
                --use-service-account-credentials=true"
      volumes:
        - /etc/kubernetes:/etc/kubernetes
  scheduler:
      image: bestmike007/etcd:v3.2.11
      restart: always
      network_mode: host
      command: "/usr/local/bin/kube-scheduler \
                --leader-elect=true \
                --v=2 \
                --kubeconfig=/etc/kubernetes/ssl/kubecfg-scheduler.config \
                --address=0.0.0.0"
      volumes:
        - /etc/kubernetes:/etc/kubernetes
  kubelet:
      image: bestmike007/etcd:v3.2.11
      restart: always
      network_mode: host
      pid: host
      privileged: true
      command: "/usr/local/bin/kubelet \
                --v=2 \
                --address=0.0.0.0 \
                --cluster-domain={{ CLUSTER_DNS_DOMAIN }} \
                --pod-infra-container-image={{ POD_INFRA_CONTAINER_IMAGE }} \
                --cgroups-per-qos=True \
                --enforce-node-allocatable= \
                --hostname-override={{ NODE_IP }} \
                --cluster-dns={{ CLUSTER_DNS_SVC_IP }} \
                --network-plugin=cni \
                --cni-conf-dir=/etc/cni/net.d \
                --cni-bin-dir=/opt/cni/bin \
                --resolv-conf=/etc/resolv.conf \
                --allow-privileged=true \
                --cloud-provider= \
                --kubeconfig=/etc/kubernetes/kubelet.kubeconfig \
                --require-kubeconfig=True \
                --node-labels=node-role.kubernetes.io/etcd=true \
                --node-labels=node-role.kubernetes.io/master=true \
                --node-labels=node-role.kubernetes.io/worker=true \
                --fail-swap-on=false"
      volumes:
        - /etc/kubernetes:/etc/kubernetes
        - /etc/cni:/etc/cni:ro
        - /opt/cni:/opt/cni:ro
        - /etc/resolv.conf:/etc/resolv.conf
        - /sys:/sys
        - /var/lib/docker:/var/lib/docker:rw
        - /var/lib/kubelet:/var/lib/kubelet:shared
        - /var/run:/var/run:rw
        - /run:/run
        - /etc/ceph:/etc/ceph
        - /dev:/host/dev
        - /var/log/containers:/var/log/containers
        - /var/log/pods:/var/log/pods
  kube-proxy:
      image: bestmike007/etcd:v3.2.11
      restart: always
      network_mode: host
      privileged: true
      command: "/usr/local/bin/kube-proxy \
                --v=2 \
                --healthz-bind-address=0.0.0.0 \
                -logtostderr=true \
                --kubeconfig=/etc/kubernetes/kube-proxy.kubeconfig"
      volumes:
        - /etc/kubernetes:/etc/kubernetes